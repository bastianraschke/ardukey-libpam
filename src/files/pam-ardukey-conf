#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
PAM ArduKey configuration program

Copyright 2015 Philipp Meisberger <p.meisberger@posteo.de>,
               Bastian Raschke <bastian.raschke@posteo.de>
All rights reserved.
"""

import os

from pamardukey import __version__ as VERSION
from pamardukey.Config import Config


def showConfirmationDialog(question = ''):
    """
    Show confirmation dialog.

    @param string question
    @return boolean
    """

    answer = raw_input(question + ' (Y/n)')

    if ( answer not in ['y', 'Y', ''] ):
        return False
    else:
        return True

def addUser(userName):
    """
    Add a new user to PAM ArduKey.

    @param string userName
    @return boolean
    """

    ## Confirmation dialog
    if ( showConfirmationDialog('Are you sure you want to add the user "' + userName + '"?') == False ):
        print('Adding user canceled.')
        return False

    ## Users can only change their own configuration
    ## TODO: root is not able to change users config yet
    if ( os.getlogin() != userName ):
        raise Exception('You cannot add another user! Only Root can do that!')

    ## Tries to init mapping file in users home directory
    try:
        mappingFile = Config(os.getenv('HOME') + '/.pam-ardukey.mapping')

        ## Public ID exists in mapping file?
        if ( mappingFile.itemExists('Mapping', 'public_id') ):
            showConfirmationDialog('Public_id already exists! Do you want to override?') == False ):
            print('Adding user canceled.')
            return False

        publicId = raw_input('Please enter your "Public_id": ')

        if ( publicId == '' ):
            raise Exception('Public_id must not be empty!')

        mappingFile.writeString('Mapping', 'Public_id', publicId)

    except Exception as e:
        print('Error occured while parsing mapping file: '+ str(e))
        return False

    return True

def removeUser(userName):
    """
    Remove user from configuration.

    @param string userName
    @return boolean
    """

    ## Confirmation dialog
    if ( showConfirmationDialog('Are you sure you want to remove the user "' + userName + '"?') == False ):
        print('Removing user canceled.')
        return False

    ## Users can only change their own configuration
    ## TODO: root is not able to change users config yet
    if ( os.getlogin() != userName ):
        raise Exception('You cannot add another user! Only Root can do that!')

    ## TODO

    return True


if ( __name__ == '__main__' ):

    parser = argparse.ArgumentParser(add_help=True,
        description='PAM ArduKey configuration program ' + VERSION)

    parser.add_argument('-v', '--version',
        action='version',
        version='PAM ArduKey configuration program ' + VERSION,
        help='Print version and exit.'
    )

    parser.add_argument('--add-user',
        action='store',
        default=False,
        required=False,
        nargs=1,
        metavar='USERNAME',
        type=str,
        help='Adds a new user.'
    )

    parser.add_argument('--remove-user',
        action='store',
        default=False,
        required=False,
        nargs=1,
        metavar='USERNAME',
        type=str,
        help='Removes a user.'
    )

    args = vars(parser.parse_args())

    if ( args['add_user'] ):
        addUser(args['add_user'])

    elif ( args['remove_user'] ):
        removeUser(args['remove_user'])

    else:
        parser.print_help()
